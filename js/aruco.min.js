var AR=AR||{};AR.Marker=function(t,e){this.id=t,this.corners=e},AR.Detector=function(){this.grey=new CV.Image,this.thres=new CV.Image,this.homography=new CV.Image,this.binary=[],this.contours=[],this.polys=[],this.candidates=[]},AR.Detector.prototype.detect=function(t){return CV.grayscale(t,this.grey),CV.adaptiveThreshold(this.grey,this.thres,2,7),this.contours=CV.findContours(this.thres,this.binary),this.candidates=this.findCandidates(this.contours,2*typeCode,.05,10),this.candidates=this.clockwiseCorners(this.candidates),this.candidates=this.notTooNear(this.candidates,10),this.findMarkers(this.grey,this.candidates,49)},AR.Detector.prototype.findCandidates=function(t,e,o,r){var i,n,s,h=[],a=t.length;for(this.polys=[],s=0;s<a;++s)i=t[s],i.length>=e&&(n=CV.approxPolyDP(i,i.length*o),this.polys.push(n),4===n.length&&CV.isContourConvex(n)&&CV.minEdgeLength(n)>=r&&h.push(n));return h},AR.Detector.prototype.clockwiseCorners=function(t){var e,o,r,i,n,s,h=t.length;for(s=0;s<h;++s)e=t[s][1].x-t[s][0].x,r=t[s][1].y-t[s][0].y,o=t[s][2].x-t[s][0].x,i=t[s][2].y-t[s][0].y,e*i-r*o<0&&(n=t[s][1],t[s][1]=t[s][3],t[s][3]=n);return t},AR.Detector.prototype.notTooNear=function(t,e){var o,r,i,n,s,h,a=[],d=t.length;for(n=0;n<d;++n)for(s=n+1;s<d;++s){for(o=0,h=0;h<4;++h)r=t[n][h].x-t[s][h].x,i=t[n][h].y-t[s][h].y,o+=r*r+i*i;o/4<e*e&&(CV.perimeter(t[n])<CV.perimeter(t[s])?t[n].tooNear=!0:t[s].tooNear=!0)}for(n=0;n<d;++n)t[n].tooNear||a.push(t[n]);return a},AR.Detector.prototype.findMarkers=function(t,e,o){var r,i,n,s=[],h=e.length;for(n=0;n<h;++n)r=e[n],CV.warp(t,this.homography,r,o),CV.threshold(this.homography,this.homography,CV.otsu(this.homography)),(i=this.getMarker(this.homography,r))&&s.push(i);return s},AR.Detector.prototype.getMarker=function(t,e){var o,r,i,n,s,h=typeCode+2,a=typeCode+1,d=t.width/h>>>0,c=d*d>>1,p=[],y=[],f=[];for(n=0;n<h;++n)for(i=0===n||a===n?1:a,s=0;s<7;s+=i)if(o={x:s*d,y:n*d,width:d,height:d},CV.countNonZero(t,o)>c)return null;for(n=0;n<typeCode;++n)for(p[n]=[],s=0;s<typeCode;++s)o={x:(s+1)*d,y:(n+1)*d,width:d,height:d},p[n][s]=CV.countNonZero(t,o)>c?1:0;for(y[0]=p,f[0]=this.hammingDistance(y[0]),r={first:f[0],second:0},n=1;n<4;++n)y[n]=this.rotate(y[n-1]),f[n]=this.hammingDistance(y[n]),f[n]<r.first&&(r.first=f[n],r.second=n);return 0!==r.first?null:new AR.Marker(this.mat2id(y[r.second]),this.rotate2(e,4-r.second))},AR.Detector.prototype.hammingDistance=function(t){var e,o,r,i,n,s={5:[[1,0,0,0,0],[1,0,1,1,1],[0,1,0,0,1],[0,1,1,1,0]],4:[[0,0,1,0],[0,0,1,1],[1,1,1,0],[1,0,1,1]],3:[[0,1,0],[0,0,1],[1,1,0],[1,1,1]]},h=0;for(ids=s[typeCode],r=0;r<typeCode;++r){for(o=1/0,i=0;i<4;++i){for(e=0,n=0;n<typeCode;++n)e+=t[r][n]===ids[i][n]?0:1;e<o&&(o=e)}h+=o}return h},AR.Detector.prototype.mat2id=function(t){var e,o=0,r={5:[1,3],4:[0,3],3:[0,2]},i=r[typeCode];for(e=0;e<typeCode;++e)o<<=1,o|=t[e][i[0]],o<<=1,o|=t[e][i[1]];return o},AR.Detector.prototype.rotate=function(t){var e,o,r=[],i=t.length;for(e=0;e<i;++e)for(r[e]=[],o=0;o<t[e].length;++o)r[e][o]=t[t[e].length-o-1][e];return r},AR.Detector.prototype.rotate2=function(t,e){var o,r=[],i=t.length;for(o=0;o<i;++o)r[o]=t[(e+o)%i];return r};